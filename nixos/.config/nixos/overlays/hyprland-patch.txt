diff --git a/src/managers/input/InputManager.cpp b/src/managers/input/InputManager.cpp
index 7d820c8f..255c5adf 100644
--- a/src/managers/input/InputManager.cpp
+++ b/src/managers/input/InputManager.cpp
@@ -131,19 +131,29 @@ void CInputManager::mouseMoveUnified(uint32_t time, bool refocus) {
     if (!PMONITOR->solitaryClient && g_pHyprRenderer->shouldRenderCursor() && PMONITOR->output->software_cursor_locks > 0)
         g_pCompositor->scheduleFrameForMonitor(PMONITOR);
 
+    if (g_pSessionLockManager->isSessionLocked()) {
+        const auto PSLS = PMONITOR ? g_pSessionLockManager->getSessionLockSurfaceForMonitor(PMONITOR->ID) : nullptr;
+
+        if (!PSLS)
+            return;
+
+        foundSurface = PSLS->pWlrLockSurface->surface;
+        surfacePos   = PMONITOR->vecPosition;
+    }
+
     CWindow* forcedFocus = m_pForcedFocus;
 
-    if (!forcedFocus)
+    if (!forcedFocus && !foundSurface)
         forcedFocus = g_pCompositor->getForceFocus();
 
-    if (forcedFocus) {
+    if (forcedFocus && !foundSurface) {
         pFoundWindow = forcedFocus;
         surfacePos   = pFoundWindow->m_vRealPosition.value();
         foundSurface = pFoundWindow->m_pWLSurface.wlr();
     }
 
     // constraints
-    if (g_pCompositor->m_sSeat.mouse && isConstrained()) {
+    if (g_pCompositor->m_sSeat.mouse && isConstrained() && !foundSurface) {
         const auto SURF       = CWLSurface::surfaceFromWlr(g_pCompositor->m_pLastFocus);
         const auto CONSTRAINT = SURF->constraint();
 
@@ -170,7 +180,7 @@ void CInputManager::mouseMoveUnified(uint32_t time, bool refocus) {
     // update stuff
     updateDragIcon();
 
-    if (!m_sDrag.drag && !m_lCurrentlyHeldButtons.empty() && g_pCompositor->m_pLastFocus && m_pLastMouseSurface) {
+    if (!m_sDrag.drag && !m_lCurrentlyHeldButtons.empty() && g_pCompositor->m_pLastFocus && m_pLastMouseSurface && !foundSurface) {
         if (m_bLastFocusOnLS) {
             foundSurface       = m_pLastMouseSurface;
             pFoundLayerSurface = g_pCompositor->getLayerSurfaceFromSurface(foundSurface);
@@ -199,16 +209,6 @@ void CInputManager::mouseMoveUnified(uint32_t time, bool refocus) {
     if (PMONITOR && PMONITOR != g_pCompositor->m_pLastMonitor && (*PMOUSEFOCUSMON || refocus))
         g_pCompositor->setActiveMonitor(PMONITOR);
 
-    if (g_pSessionLockManager->isSessionLocked()) {
-        const auto PSLS = PMONITOR ? g_pSessionLockManager->getSessionLockSurfaceForMonitor(PMONITOR->ID) : nullptr;
-
-        if (!PSLS)
-            return;
-
-        foundSurface = PSLS->pWlrLockSurface->surface;
-        surfacePos   = PMONITOR->vecPosition;
-    }
-
     // overlays are above fullscreen
     if (!foundSurface)
         foundSurface = g_pCompositor->vectorToLayerSurface(mouseCoords, &PMONITOR->m_aLayerSurfaceLayers[ZWLR_LAYER_SHELL_V1_LAYER_OVERLAY], &surfaceCoords, &pFoundLayerSurface);
@@ -1171,6 +1171,12 @@ void CInputManager::onKeyboardKey(wlr_keyboard_key_event* e, SKeyboard* pKeyboar
         g_pKeybindManager->dpms("on");
     }
 
+    if (g_pSessionLockManager->isSessionLocked() && !g_pSessionLockManager->isSurfaceSessionLock(g_pCompositor->m_sSeat.seat->keyboard_state.focused_surface)) {
+        Debug::log(ERR, "BUG THIS: Session locked but focused isn't session lock on key");
+        g_pInputManager->refocus();
+        return;
+    }
+
     bool passEvent = g_pKeybindManager->onKeyEvent(e, pKeyboard);
 
     g_pCompositor->notifyIdleActivity();
